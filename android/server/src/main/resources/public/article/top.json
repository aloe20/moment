{"data":[{"adminAdd":false,"apkLink":"","audit":1,"author":"极客时间","canEdit":false,"chapterId":249,"chapterName":"干货资源","collect":false,"courseId":13,"desc":"","descMd":"","envelopePic":"","fresh":false,"host":"","id":25903,"isAdminAdd":false,"link":"http://gk.link/a/11WOs","niceDate":"2023-03-11 11:38","niceShareDate":"2023-03-02 09:23","origin":"","prefix":"","projectLink":"","publishTime":1678505918000,"realSuperChapterId":248,"route":false,"selfVisible":0,"shareDate":1677720234000,"shareUser":"","superChapterId":249,"superChapterName":"干货资源","tags":[],"title":"课程推荐 - 大型Android系统重构实战 - 极客时间","type":1,"userId":-1,"visible":1,"zan":0},{"adminAdd":false,"apkLink":"","audit":1,"author":"干货","canEdit":false,"chapterId":249,"chapterName":"干货资源","collect":false,"courseId":13,"desc":"","descMd":"","envelopePic":"","fresh":false,"host":"","id":25615,"isAdminAdd":false,"link":"https://www.xiangxueketang.cn/enjoy/play/native_15","niceDate":"2023-03-07 22:18","niceShareDate":"2023-01-31 14:08","origin":"","prefix":"","projectLink":"","publishTime":1678198728000,"realSuperChapterId":248,"route":false,"selfVisible":0,"shareDate":1675145300000,"shareUser":"","superChapterId":249,"superChapterName":"干货资源","tags":[],"title":"这可能是目前更全的《Android面试题大全及解析》（十三大模块内容）","type":1,"userId":-1,"visible":1,"zan":0},{"adminAdd":false,"apkLink":"","audit":1,"author":"xiaoyang","canEdit":false,"chapterId":440,"chapterName":"官方","collect":false,"courseId":13,"desc":"<p>关于资源相关的大家可以先看一下这篇文章<a href=\\\"https://juejin.cn/post/7170562275374268447\\\">终于理解～Android 模块化里的资源冲突</a>，简单来描述下问题：</p>\r\n<p>如果多个模块中包含同名的资源，例如图片，string等，更终<strong>打包并不会报错</strong>，但是apk中更终只能保留其中一份资源，<strong>即对于某些模块来说，运行时资源被覆盖</strong>而造成不符合预期。</p>\r\n<p>这种问题，很多同学都说，可以通过前缀，但是依赖的三方库千千万，你自己的代码好处理，三方的总会或多或少出现冲突，更讨厌的还是打包还不报错。</p>\r\n<p>针对上述问题，如何规避？</p>","descMd":"","envelopePic":"","fresh":false,"host":"","id":25098,"isAdminAdd":false,"link":"https://wanandroid.com/wenda/show/25098","niceDate":"2022-11-29 22:10","niceShareDate":"2022-11-29 22:10","origin":"","prefix":"","projectLink":"","publishTime":1669731058000,"realSuperChapterId":439,"route":false,"selfVisible":0,"shareDate":1669731010000,"shareUser":"","superChapterId":440,"superChapterName":"问答","tags":[{"name":"本站发布","url":"/article/list/0?cid=440"},{"name":"问答","url":"/wenda"}],"title":"每日一问 | Android 模块化依赖中的资源冲突该如何规避？","type":1,"userId":2,"visible":1,"zan":8},{"adminAdd":false,"apkLink":"","audit":1,"author":"xiaoyang","canEdit":false,"chapterId":440,"chapterName":"官方","collect":false,"courseId":13,"desc":"<p>查阅资料，会发现 Android 4.0开始则默认开启硬件加速；</p>\r\n<p>另外再查阅资料，还会发现：</p>\r\n<pre><code>在Android中，可以四给不同层次上开启硬件加速：\r\n\r\n1、Application\r\n\r\n&lt;applicationandroid:hardwareAccelerated=&quot;true&quot;&gt;\r\n\r\n2、Activity\r\n\r\n&lt;activityandroid:hardwareAccelerated=&quot;true&quot;&gt;\r\n\r\n3、Window\r\n\r\ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED,WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);\r\n\r\n4、View\r\n\r\nview.setLayerType(View.LAYER_TYPE_SOFTWARE,null);\r\n</code></pre><p>那么问题来了：</p>\r\n<ol>\r\n<li>官方声明 4.0 后默认开启硬件加速指的是application全局hardwareAccelerated=&quot;true&quot;吗？</li>\r\n<li>如果1 不是，那么默认开启硬件加速指的是什么？与hardwareAccelerated=&quot;true&quot;有什么区别？</li>\r\n<li>如果不手动设置hardwareAccelerated，默认读取到的view LayerType是哪个？是否算是开了硬件加速？</li>\r\n</ol>","descMd":"","envelopePic":"","fresh":false,"host":"","id":24990,"isAdminAdd":false,"link":"https://www.wanandroid.com/wenda/show/24990","niceDate":"2022-11-20 12:34","niceShareDate":"2022-11-20 12:34","origin":"","prefix":"","projectLink":"","publishTime":1668918886000,"realSuperChapterId":439,"route":false,"selfVisible":0,"shareDate":1668918868000,"shareUser":"","superChapterId":440,"superChapterName":"问答","tags":[{"name":"本站发布","url":"/article/list/0?cid=440"},{"name":"问答","url":"/wenda"}],"title":"每日一问 | Android 默认开启硬件加速与设置hardwareAccelerated是一回事吗？","type":1,"userId":2,"visible":1,"zan":10}],"errorCode":0,"errorMsg":""}